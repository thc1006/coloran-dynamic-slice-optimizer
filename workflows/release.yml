name: Release

on:
  release:
    types: [published]

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: release
    permissions:
      id-token: write  # For trusted publishing to PyPI
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.9"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip build twine
    
    - name: Build package
      run: python -m build
    
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
    
    - name: Create GitHub Release Assets
      run: |
        # Create additional release assets
        tar -czf coloran-dynamic-slice-optimizer-${{ github.event.release.tag_name }}-docs.tar.gz docs/
        zip -r coloran-dynamic-slice-optimizer-${{ github.event.release.tag_name }}-examples.zip examples/
    
    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./coloran-dynamic-slice-optimizer-${{ github.event.release.tag_name }}-docs.tar.gz
        asset_name: docs.tar.gz
        asset_content_type: application/gzip
